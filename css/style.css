@font-face {
    font-display: swap;
    font-family: "Poppins";
    font-weight: 300;
    src: url("../fonts/poppins-v20-latin-300.woff2") format("woff2"), url("../fonts/poppins-v20-latin-300.woff") format("woff");
}

@font-face {
    font-display: swap;
    font-family: "Poppins";
    font-weight: 400;
    src: url("../fonts/poppins-v20-latin-regular.woff2") format("woff2"), url("../fonts/poppins-v20-latin-regular.woff") format("woff");
}

@font-face {
    font-display: swap;
    font-family: "Poppins";
    font-weight: 600;
    src: url("../fonts/poppins-v20-latin-600.woff2") format("woff2"), url("../fonts/poppins-v20-latin-600.woff") format("woff");
}

@font-face {
    font-display: swap;
    font-family: "Poppins";
    font-weight: 900;
    src: url("../fonts/poppins-v20-latin-900.woff2") format("woff2"), url("../fonts/poppins-v20-latin-900.woff") format("woff");
}

:root {
    --color-primary-dark: #31261a;
    /*примінення змін до кожного стилю одразу*/
    --color-primary-light: #faf4ea;
    --color-brand-normal: #819b57;
    --color-brand-dark: #465929;
    --color-brand-light: #cfcfbc;
    --color-secondary-dark: #a18268;
}

/*BASE*/
*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    color: var(--color-primary-dark);
    background-color: var(--color-primary-light);
    font-family: "Poppins", sans-serif;
    /*щоб обрати тип шрифтц sans-serif чи інший - треба дивитися з засічка текст чи ні*/
    font-size: 18px;
    font-weight: 400;
    /*font-... задаємо в боді, якщо значення домінантне. потім те, що відрізняється - прописуємо окремо*/
    line-height: 1.5;
    /*задаємо не в пікселях, а в коефіцієнті. line-height треба розділити на font-size*/
    margin: 0;
    /*при зменшенні екрану контент не прилипає до сторін. некоректний розмір*/
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
    margin-top: 0;
}

a {
    display: inline-block;
    /*посилання за замовчуванням inline елемент. коли задаємо block - посилання займає всю ширину. з inline-block - зробить посилання блоковим(тобто на нього працюватимуть розміри), але воно залишиться рядковим і воно не буде розтягуватися на всю гирину батьківського елементу*/
}

address {
    font-style: normal;
}

ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
}

.visually-hidden {
    position: absolute;
    left: -10000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
}

.section {
    padding: 48px 0;
    /*патерн для секцій. щоб у сумі вийшло 96px padding*/
}

.container {
    width: 100%;
    /*щоб не прибивати цвяхами контент*/
    max-width: 1288px;
    /*ширина контейнера на макеті 1240px АЛЕ через box-sizing: border-box 0 24px не входить в 1240рх. Тобто нам треба 48(це 24 справа і зліва) додати до 1240(1240 + 24 + 24 = 1288)*/
    /*додали 24px padding (право-ліво)*/
    margin: 0 auto;
    padding: 0 24px;
    /*щоб контент в контейнері не прилипав при зменшені екрану. відступи і розміри парні 8. тобто 0 24px або 0 16px(додаються тільки по сторонах)*/
}

/*BUTTON*/
.button {
    padding: 16px 32px;
    color: var(--color-primary-light);
    background-color: var(--color-brand-normal);
    border: 2px solid var(--color-brand-normal);
    border-radius: 8px;
    cursor: pointer;
    font-weight: 600;
}

.button:hover {
    color: var(--color-brand-dark);
    background-color: transparent;
    /*transparent - робить фон прозорим*/
}

/* .form-button:disabled {
    color: grey;
    background-color: lightgrey;
    border-color: currentColor;
    cursor: not-allowed;
} */
/*LINK*/
.link {
    color: var(--color-primary-light);
    text-decoration: none;
    transition: color 0.3s;
    /*завжди задаємо перехід до елементу до якого хочемо його застосувати. НЕ НА подію(наприклад hover)*/
}

.link:hover {
    color: var(--color-brand-normal);
    /*font-weight: 600; тому що 600 текст стає тільки при наведенні на нього*/
}

/* HEADER */
.header {
    position: absolute;
    /*зробили хедер абсолютно зпозиціонованим. щоб накладався поверх секції*/
    top: 0;
    left: 0;
    /*top і left - для того щоб перестрахуватися й прикріпити хедер до верхньої лівої частини*/
    width: 100%;
    padding-top: 32px;
}

.header-container {
    display: flex;
    align-items: center;
    gap: 40px;
    /*відстань між кнопкою та хедером*/
}

.header-container {
    display: flex;
    align-items: center;
    gap: 40px;
    /*відстань між кнопкою та хедером*/
}

.header-nav {
    display: flex;
    align-items: center;
    flex-grow: 1;
    gap: 40px;
}

.header-menu {
    display: flex;
    gap: 64px;
    /*замість марджін*/
    flex-grow: 1;
    justify-content: center;
}

/*HERO SECTION*/
.hero-section {
    padding: 272px 0;
    background-image: linear-gradient(102.76deg, rgba(18, 18, 17, 0.78) 2.03%, rgba(18, 18, 17, 0.6) 58.46%, rgba(18, 18, 17, 0) 90.36%), url("../images/hero-section-background.jpg");
    background-repeat: no-repeat;
    background-position: center top;
    /*відлік від верхньої лівої точки*/
    background-size: cover;
    /*background-attachment: fixed; зафіксувати зображення*/
}

.hero-title {
    color: var(--color-primary-light);
    text-align: center;
    font-size: 128px;
    /*fsz128*/
    font-weight: 900;
    margin-bottom: 0;
}

.hero-title .accent {
    color: var(--color-brand-normal);
    /*HEX value*/
    /*color: rgba(red, green, blue, alpha); на місці альфа ми можемо задати прозорість - 1 повністю непрозорий елемент; 0 - повністю прозорий*/
}

/*ADVANTAGES SECTION*/
.advantages-section {
    background-color: var(--color-brand-normal);
    padding: 16px 0;
}

.advantages-list {
    display: flex;
    justify-content: space-between;
    gap: 40px;
    /*бо при зменшенні екрану список зліпається*/
}

.advantages-item {
    font-size: 20px;
    font-weight: 300;
    color: var(--color-primary-light);
}

.section-title {
    font-size: 64px;
    /* font-weight: 900; */
    line-height: 1.3;
}

.section-title.centered {
    text-align: center;
}

.section-title .accent {
    color: var(--color-brand-dark);
}

/*Traditions section*/
/*.traditions-text {
    white-space: nowrap; Властивість white-space контролює як буде відображатися текст, якщо він не вміщується в один рядок
}*/
.traditions-section {
    padding-top: 96px;
}

.traditions-container {
    display: flex;
    /*розташувати контент і зображення в рядок*/
    justify-content: space-between;
    gap: 40px;
}

.traditions-title {
    margin-bottom: 42px;
}

.traditions-text .brand {
    color: var(--color-brand-normal);
    font-weight: 600;
}

.traditions-text .uppercase {
    text-transform: uppercase;
}

.traditions-text.limited {
    max-width: 340px;
}

.traditions-content {
    max-width: 710;
}

/*CHEF SECTION*/
.chefs-title {
    position: relative;
    /* бо before і after позиціонуємо відносно chefs-title*/
    margin: 0 auto 80px;
    /* max-width: 532px; в хтмл записали <br>, тому не треба. і краще не використовувати такі великі цифри */
}

.chef-text p {
    margin-bottom: 24px;
}

.chef-text p:last-child {
    margin-bottom: 0;
}

.chefs-title::after,
.chefs-title::before {
    position: absolute;
    /*коли додаємо position: absolute; - автоматично рядкові елементи стають блоковими. тому потреби в display: block; відпадає*/
    bottom: 24px;
    /*щоб розмістити їх до нижньої межі*/
    /* display: block; */
    width: 352px;
    border: 2px solid var(--color-brand-light);
    content: "";
}

.chefs-title::before {
    left: 0;
}

.chefs-title::after {
    right: 0;
}

.chefs-list {
    display: flex;
    gap: 40px 30px;
    flex-wrap: wrap;
}

.chefs-item {
    flex-basis: calc((100% - 30px) / 2);
}

.chef-title {
    margin-bottom: 16px;
    font-size: 40px;
    font-weight: 600;
}

.chef-card {
    display: flex;
    gap: 30px;
}

.chef-photo {
    border-radius: 4px 4px 4px 200px;
    box-shadow: -16px 16px 0 0 var(--color-primary-light), -16px 16px 0 2px var(--color-secondary-dark);
    /*по осіx y; розмиття та розширення 0 0*/
}

/*FORMAT SECTION*/
.formats-container {
    display: flex;
    gap: 32px;
    align-items: center;
    /*властивість вирівнює елементи за допомоіжною віссю*/
}

.formats-list {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
}

.format-card {
    position: relative;
    /*бо format-image позиціонується відносно format-card*/
    height: 444px;
    /*в цій ситуации не залжеить від розміру контенту*/
    /* background-image: url('../images/walrus.jpg'); */
    border: 1px solid rgb(87, 66, 66);
    border-radius: 16px;
    padding: 24px;
    background-image: linear-gradient(180deg, rgba(49, 38, 26, 0) 55.21%, rgba(49, 38, 26, 0.71) 72.92%, var(--color-primary-dark) 100%);
    /* background-image: linear-gradient(180deg, rgba(49, 38, 26, 0.00) 55.21%, rgba(49, 38, 26, 0.71) 72.92%, #31261A 100%);
    box-shadow: 2px 3px 4px 4px violet, 4px 4px 8px 8px gold;*/
    transition: transform 0.3s;
}

.format-card:hover {
    transform: scale(1.05);
}

.formats-title {
    margin-bottom: 80px;
}

.format-title {
    font-size: 24px;
    font-weight: 600;
}

.format-text {
    font-size: 14px;
    font-weight: 300;
}

.formats-item {
    flex-basis: calc((100% - 40px) / 3);
}

/*CAROUSEL*/
.carousel-button {
    display: flex;
    align-items: center;
    /*центруємо по допоміжній осі/вісі*/
    justify-content: center;
    /*центруємо по основній осі/вісі*/
    flex-shrink: 0;
    /*щоб елементи не стискалися або зменшувати свій розмір*/
    width: 44px;
    height: 44px;
    padding: 0;
    /*прибираємо непотрібні падінги*/
    background-color: transparent;
    border-radius: 50%;
    border: 1px solid var(--color-primary-dark);
    cursor: pointer;
}

/* .carousel-arrow {
    fill: var(--color-primary-dark);
} - можна не писати, бо класи наслідуються*/
.carousel-button:hover {
    background-color: var(--color-primary-dark);
    fill: var(--color-primary-light);
}

.carousel-button.next {
    transform: rotate(180deg);
}

/*також можна видалилти class="carousel-arrow" в <svg class="carousel-arrow" width="16" height="16">*/
/*hover не до самої іконки, а саме до каруселі
.carousel-button:hover .carousel-arrow {
    fill: var(--color-primary-light);
} - можна не писати,
бо класи наслідуються*/
/*CONTACT*/
.contact-section {
    padding-bottom: 96px;
}

.contact-container {
    display: flex;
    gap: 32px;
}

.contact-title {
    margin-bottom: 16px;
}

.contact-map {
    flex-shrink: 0;
    /*щоб мапа не стискалася*/
    border: none;
    border-radius: 16px;
}

/*FOOTER*/
.footer {
    padding: 32px 0;
    /*padding задаємо на самий верхній елемент у секції. або це футер, або хедер, або секція. тому що container знаходить всередині і падінги повинні посувати цей контейнер*/
    position: relative;
    background-image: url("../images/footer-background.png");
    /*png дає можливість експортувати зображення з прозорістю*/
    background-color: var(--color-primary-dark);
    background-size: cover;
    background-position: center;
}

.footer::before,
.footer::after {
    content: "";
    position: absolute;
    background-repeat: no-repeat;
    bottom: 0;
}

.footer::before {
    background-image: url("../images/decor-bread-small.png");
    width: 180px;
    height: 120px;
    left: 0;
    /*дається за азмовчуванням, але краще залишити*/
}

.footer::after {
    background-image: url("../images/decor-bread-large.png");
    width: 380px;
    height: 190px;
    right: 0;
}

.footer-container {
    display: flex;
    gap: 20px;
}

.footer-nav,
.footer-address {
    display: flex;
    flex-basis: 50%;
    gap: 20px;
}

.footer-logo,
.footer-menu {
    flex-grow: 1;
}

.address-list,
.address-info {
    flex-grow: 1;
}

.address-link {
    color: var(--color-primary-light);
    font-size: 16px;
    font-weight: 300;
    text-decoration: none;
}

.address-link:hover {
    color: var(--color-brand-normal);
    font-size: 16px;
    font-weight: 300;
}

.address-icon {
    fill: var(--color-primary-light);
    /*fill(заливка) додаватиме колір свг зображеню*/
    /* stroke: red; - обводка */
}

.address-icon:hover {
    fill: var(--color-brand-normal);
}

.address-copyright {
    font-size: 14px;
}

/*MODAL*/
.backdrop {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /*усюди 0, щоб елемент розтягувався повністю на всю ширину екрану*/
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.5);
    padding: 20px 0;
    transition: opacity 0.3s, visibility 0.3s;
}

.backdrop.is-hidden {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    /*щоб не могли ніяк натиснути на модальне вікно. Всі ці властивості(3) для того, щоб в майбутньому працювала анімація*/
    /* display: none; не завжди доречно. тому що повністю прибирає вікно з потоку */
}

.modal {
    position: relative;
    width: 100%;
    max-width: 880px;
    height: 100%;
    max-height: 880px;
    padding: 128px;
    background-color: var(--color-primary-light);
    border-radius: 32px;
    overflow-y: auto;
    /*для того, що коли контент не вміщається в модальне вікно, можна було скролити й контент при цьому не вилазив
    y - бо саме по цій осі треба скролити(скролиться й без вказання осі. а так виглядає доречніше)*/
}

.modal-btn-close {
    position: absolute;
    top: 40px;
    right: 40px;
}

/*FORM*/
.form-field {
    position: relative;
    /*щоб позиціонувати form-label абсолютно відносно form-field */
    margin-bottom: 32px;
}

.form-label {
    position: absolute;
    top: 16px;
    left: 42px;
    /*сам по собі робить елемент блоковим за замовчуванням*/
    /* display: block; */
    /*елементи треба розтягнути на всю ширину. label за замовчуваннями рядковий елемент(display:inline). Ми зробили його БЛОКОВИМ*/
    /*по осі х та y*/
    /*час переміщення тут, бо селектор використався до .form-label */
}

/* псевдоклас focus-within спрацьовує, коли всередині елемента до якого ми додаємо цей псевдоклас є елемент у фокусі */
/*також треба додати transition: transform 0.3s; до form-label*/
/* .form-field:focus-within .form-label {
    transform: translate(-36px, -36px);
} */
.form-input {
    padding: 16px 42px;
    /*висота input задається падінгами*/
    width: 100%;
    font-size: 16px;
    line-height: 1.18;
    border-radius: 8px;
    /*line-height: 1.18; border-radius: 8px; стилі для тексту, який вводитиме користувач*/
    border: 1px solid var(--color-secondary-dark);
    background-color: transparent;
    /*прозорий*/
}

.form-input:focus {
    border-color: var(--color-brand-normal);
    outline: none;
    /*outline браузер ставить за замовчуванням, тому колір не змінюється при фокусі. щоб колір змінився, треба додати none*/
}

.form-input:disabled {
    border-color: lightgrey;
}

.form-input:disabled::-webkit-input-placeholder {
    color: lightgrey;
}

.form-input:disabled::-moz-placeholder {
    color: lightgrey;
}

.form-input:disabled:-ms-input-placeholder {
    color: lightgrey;
}

.form-input:disabled::-ms-input-placeholder {
    color: lightgrey;
}

.form-input:disabled::placeholder {
    color: lightgrey;
}

/*УВАГА placeholder - це ПСЕВДОЕЛЕМЕНТ, НЕ псевдоклас*/
.form-input::-webkit-input-placeholder {
    color: var(--color-secondary-dark);
    font-size: 16px;
    line-height: 1.18;
}

.form-input::-moz-placeholder {
    color: var(--color-secondary-dark);
    font-size: 16px;
    line-height: 1.18;
}

.form-input:-ms-input-placeholder {
    color: var(--color-secondary-dark);
    font-size: 16px;
    line-height: 1.18;
}

.form-input::-ms-input-placeholder {
    color: var(--color-secondary-dark);
    font-size: 16px;
    line-height: 1.18;
}

.form-input::placeholder {
    color: var(--color-secondary-dark);
    font-size: 16px;
    line-height: 1.18;
}

.form-input:focus::-webkit-input-placeholder {
    color: var(--color-primary-dark);
}

.form-input:focus::-moz-placeholder {
    color: var(--color-primary-dark);
}

.form-input:focus:-ms-input-placeholder {
    color: var(--color-primary-dark);
}

.form-input:focus::-ms-input-placeholder {
    color: var(--color-primary-dark);
}

.form-input:focus::placeholder {
    color: var(--color-primary-dark);
}

.form-button {
    display: block;
    /*марджин працює тільки для блокових елементів. за замовчуванням кнопка була inline-block*/
    margin: 0 auto 24px;
}

.form-terms {
    max-width: 210px;
    margin: 0 auto;
    font-size: 12px;
    font-weight: 500;
    line-height: 1.5;
    text-align: center;
}

.form-terms-link {
    color: var(--color-primary-dark);
    text-underline-offset: 3px;
}

/* .checkbox-input {
    appearance: none;
}

.checkbox-input:checked+.checkbox-label::before {
    background-color: var(--color-secondary-dark)
}

.checkbox {
    position: relative;
}

IT, [14.04.2024 21:07]
.checkbox-label {
    padding-left: 24px;
}

.checkbox-label::before {
    position: absolute;
    width: 16px;
    height: 16px;
    top: 0;
    left: 0;
    margin-top: 5px;
    content: "";
    border-radius: 2px;
    border: 1px solid var(--color-primary-dark);
} */